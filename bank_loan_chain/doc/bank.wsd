@startuml bank-loan-approval

package interfaces {
    interface Handler {
        +setNext(handler : Handler) : Handler
        +handle(request : Request) : boolean
    }
}

package handler {
    abstract class AbstractHandler {
        -nextHandler : Handler
        +setNext(handler : Handler) : Handler
        +handle(request : Request) : boolean
    }

    class CreditAvailabilityHandler {
        +handle(request : Request) : boolean
    }

    class IncomeHandler {
        +handle(request : Request) : boolean
    }

    class CreditHistoryHandler {
        +handle(request : Request) : boolean
    }

    class CollateralHandler {
        +handle(request : Request) : boolean
    }
}

package request {
    class Request {
        -creditAvailable : boolean
        -monthlyIncome : double
        -loanAmount : double
        -hasCreditIssues : boolean
        -hasCollateral : boolean
    }
}

package bank {
    class BankLoanApplication {
    }

    class BuildChainBank {
        +buildChain() : Handler
    }
}

BankLoanApplication -> AbstractHandler : handler
Handler <|.. AbstractHandler
BankLoanApplication -> Request : request
AbstractHandler <|-- CreditAvailabilityHandler
AbstractHandler <|-- IncomeHandler
AbstractHandler <|-- CreditHistoryHandler
AbstractHandler <|-- CollateralHandler
BankLoanApplication -> BuildChainBank : uses
BuildChainBank -> Handler : buildChain()

@enduml
